package basicsJava.methods.methodsAndVariableVisibility.task1;

import java.util.Scanner;
public class Praktikum {

    public static void main(String[] args) {

        ... // Сохраните общее число мячиков Пикселя в переменной balls
        System.out.println("У Пикселя " + ... + " мячиков");

		... // Поиграйте с Пикселем, вызвав метод playPixel

        // После игры Пиксель должен вернуть все мячики на место!
        System.out.println("Пиксель вернул все мячики");
        System.out.println("Их снова " + ...);
    }

    public static void playPixel(int balls) {
        Scanner scanner = new Scanner(System.in);
        System.out.println("Сколько мячиков он спрятал?");
        ... // Сохраните количество мячиков, которые спрятал Пиксель, в переменную hiddenBalls

        balls = ... // Посчитайте, сколько у Пикселя осталось мячиков
        System.out.println("Осталось " + ... );
    }
}
/*
Условие задачи:
Кот Пиксель очень любит играть с мячиками — всего их у него 15. Днём он повсюду их прячет
(число спрятанных мячиков считывается из консоли), но вечером всегда возвращает на место.
Расставьте переменные balls и hiddenBalls в коде так, чтобы программа смогла правильно
посчитать количество мячиков у Пикселя до начала игры, во время неё и в конце дня.
ПОДСКАЗКА:
Объявите переменную balls с типом int и сохраните в неё число 15 — столько у Пикселя мячиков.
Чтобы поиграть с Пикселем, нужно передать методу playPixel в качестве аргумента общее количество
мячиков balls.
Чтобы сохранить число спрятанных котом мячиков, используйте переменную hiddenBalls.
При её объявлении не забудьте указать тип int. Для считывания числа из консоли
используйте scanner.nextInt().
Чтобы посчитать, сколько осталось мячей после игры, отнимите от переменной balls значение hiddenBalls.
Значение переменной balls в методе main не поменяется — его можно использовать и
до вызова метода playPixel, и после.
 */
