package basicsJava.arrays.outOfBoundsOfAnArray.task2;

import java.util.Scanner;

class Praktikum {
    public static void main(String[] args) {
        // Объявили массив трат за неделю (7 дней)
        double[] expenses = new double[7];

        double expense = 50; // В первый день потрачено 50 рублей

        // Заполнили массив, используя цикл for
        for (int i = 0; i < expenses.length; i++) {
            expenses[i] = expense;
            expense = expense + 100;
        }
        System.out.println("Расходы за неделю успешно занесены в приложение!");
        Scanner scanner = new Scanner(System.in);
        while (true) { // Добавили бесконечный цикл — теперь не страшно ошибаться много раз
            System.out.println("Расходы за какой день вы хотите проверить. Выберите значение от 0 (пн) до 6 (вс).");

            // Считайте ввод пользователя из консоли и сохраните в переменной index
            ...

            // Проверьте, не допущена ли ошибка
            ...
            // Если значение меньше нуля,
            // напечатайте "Выбрано неверное значение! Минимальное значение - 0"
            ...
            // Если выбрано значение больше длины массива или равное ей,
            // напечатайте "Выбрано неверное значение! Максимальное значение - " + ...

            // Если пользователь ввёл корректный индекс,
            // то программа должна вывести значение нужного элемента и завершить работу (прервать цикл)
            System.out.println("Потрачено " + ...+" рублей");
        }
    }
}
/*
Условие задачи:
После того как вы нашли и исправили все ошибки, программа по автозаполнению массива
с расходами за неделю работает правильно. Допишите её таким образом, чтобы у пользователя
появилась возможность это проверить — вызвать любой элемент массива по его индексу.
Исключите ошибки выхода за границы массива — настройте ответ программы на тот случай,
если пользователь введёт несуществующий индекс. Чтобы можно было ошибаться много раз —
мы добавили в код бесконечный цикл. Прервите его выполнение с помощью оператора break
в том случае, если введён корректный индекс.
ПОДСКАЗКА:
Чтобы считать ввод пользователя и сохранить его, используйте операцию int index = scanner.nextInt();.
Для обработки некорректного индекса используйте ветвления.
Первое условие (после if) должно предусматривать, что пользователь ввёл индекс меньше нуля index < 0.
Второе условие (после else if) нужно на тот случай, если пользователь ввёл индекс, который больше или
равен длине массива index >= expenses.length.
Для определения максимального значения массива (нужно в строке печати) отнимите единицу — expenses.length - 1.
Чтобы напечатать выбранный пользователем элемент, используйте имя массива и введённый индекс expenses[index].
Чтобы выйти из бесконечного цикла, воспользуйтесь оператором break сразу после печати запрошенного пользователем элемента.
 */